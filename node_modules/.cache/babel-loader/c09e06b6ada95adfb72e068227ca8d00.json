{"ast":null,"code":"import { useRef, useEffect } from 'react';\n/* eslint-disable react-hooks/rules-of-hooks */\n\nvar checkedPkgs = {};\n/**\r\n * Just a lil state logger\r\n *\r\n * @param state\r\n * @param DEBUG\r\n */\n\nfunction useStateLogger(state, DEBUG) {\n  if (DEBUG === void 0) {\n    DEBUG = false;\n  }\n\n  if (process.env.NODE_ENV !== \"production\") {\n    var debugRef = useRef(DEBUG);\n    useEffect(function () {\n      debugRef.current = DEBUG;\n    }, [DEBUG]);\n    useEffect(function () {\n      if (debugRef.current) {\n        console.group(\"State Updated\");\n        console.log(\"%c\" + state, \"font-weight: normal; font-size: 120%; font-style: italic;\");\n        console.groupEnd();\n      }\n    }, [state]);\n  }\n}\n/**\r\n * When in dev mode, checks that styles for a given `@reach` package are loaded.\r\n *\r\n * @param packageName Name of the package to check.\r\n * @example checkStyles(\"dialog\") will check for styles for @reach/dialog\r\n */\n\n\nfunction checkStyles(packageName) {\n  if (process.env.NODE_ENV !== \"production\") {\n    // In CJS files, process.env.NODE_ENV is stripped from our build, but we\n    // need it to prevent style checks from clogging up user logs while testing.\n    // This is a workaround until we can tweak the build a bit to accommodate.\n    var _ref = typeof process !== \"undefined\" ? process.env : {\n      NODE_ENV: \"development\"\n    },\n        environment = _ref.NODE_ENV; // only check once per package\n\n\n    if (checkedPkgs[packageName]) return;\n    checkedPkgs[packageName] = true;\n\n    if (environment === \"development\" && parseInt(window.getComputedStyle(document.body).getPropertyValue(\"--reach-\" + packageName), 10) !== 1) {\n      console.warn(\"@reach/\" + packageName + \" styles not found. If you are using a bundler like webpack or parcel include this in the entry file of your app before any of your own styles:\\n  \\n      import \\\"@reach/\" + packageName + \"/styles.css\\\";\\n  \\n    Otherwise you'll need to include them some other way:\\n  \\n      <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"node_modules/@reach/\" + packageName + \"/styles.css\\\" />\\n  \\n    For more information visit https://ui.reach.tech/styling.\\n    \");\n    }\n  }\n}\n/**\r\n * When in dev mode, checks that styles for a given `@reach` package are loaded.\r\n *\r\n * @param packageName Name of the package to check.\r\n * @example useCheckStyles(\"dialog\") will check for styles for @reach/dialog\r\n */\n\n\nfunction useCheckStyles(packageName) {\n  if (process.env.NODE_ENV !== \"production\") {\n    var name = useRef(packageName);\n    useEffect(function () {\n      return void (name.current = packageName);\n    }, [packageName]);\n    useEffect(function () {\n      return checkStyles(name.current);\n    }, []);\n  }\n}\n/**\r\n * Logs a warning in dev mode when a component switches from controlled to\r\n * uncontrolled, or vice versa\r\n *\r\n * A single prop should typically be used to determine whether or not a\r\n * component is controlled or not.\r\n *\r\n * @param controlledValue\r\n * @param controlledPropName\r\n * @param componentName\r\n */\n\n\nfunction useControlledSwitchWarning(controlledValue, controlledPropName, componentName) {\n  if (process.env.NODE_ENV !== \"production\") {\n    var controlledRef = useRef(controlledValue != null);\n    var nameCache = useRef({\n      componentName: componentName,\n      controlledPropName: controlledPropName\n    });\n    useEffect(function () {\n      nameCache.current = {\n        componentName: componentName,\n        controlledPropName: controlledPropName\n      };\n    }, [componentName, controlledPropName]);\n    useEffect(function () {\n      var wasControlled = controlledRef.current;\n      var _nameCache$current = nameCache.current,\n          componentName = _nameCache$current.componentName,\n          controlledPropName = _nameCache$current.controlledPropName;\n      var isControlled = controlledValue != null;\n\n      if (wasControlled !== isControlled) {\n        console.error(\"A component is changing an \" + (wasControlled ? \"\" : \"un\") + \"controlled `\" + controlledPropName + \"` state of \" + componentName + \" to be \" + (wasControlled ? \"un\" : \"\") + \"controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled \" + componentName + \" element for the lifetime of the component.\\n      More info: https://fb.me/react-controlled-components\");\n      }\n    }, [controlledValue]);\n  }\n}\n\nexport { checkStyles, useCheckStyles, useControlledSwitchWarning, useStateLogger };","map":{"version":3,"names":["useRef","useEffect","checkedPkgs","useStateLogger","state","DEBUG","process","env","NODE_ENV","debugRef","current","console","group","log","groupEnd","checkStyles","packageName","_ref","environment","parseInt","window","getComputedStyle","document","body","getPropertyValue","warn","useCheckStyles","name","useControlledSwitchWarning","controlledValue","controlledPropName","componentName","controlledRef","nameCache","wasControlled","_nameCache$current","isControlled","error"],"sources":["C:/Users/jeanl/Documents/bus-stops-app/maps-app/node_modules/@reach/combobox/node_modules/@reach/utils/dev-utils/dist/reach-utils-dev-utils.esm.js"],"sourcesContent":["import { useRef, useEffect } from 'react';\r\n\r\n/* eslint-disable react-hooks/rules-of-hooks */\r\nvar checkedPkgs = {};\r\n/**\r\n * Just a lil state logger\r\n *\r\n * @param state\r\n * @param DEBUG\r\n */\r\n\r\nfunction useStateLogger(state, DEBUG) {\r\n  if (DEBUG === void 0) {\r\n    DEBUG = false;\r\n  }\r\n\r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    var debugRef = useRef(DEBUG);\r\n    useEffect(function () {\r\n      debugRef.current = DEBUG;\r\n    }, [DEBUG]);\r\n    useEffect(function () {\r\n      if (debugRef.current) {\r\n        console.group(\"State Updated\");\r\n        console.log(\"%c\" + state, \"font-weight: normal; font-size: 120%; font-style: italic;\");\r\n        console.groupEnd();\r\n      }\r\n    }, [state]);\r\n  }\r\n}\r\n/**\r\n * When in dev mode, checks that styles for a given `@reach` package are loaded.\r\n *\r\n * @param packageName Name of the package to check.\r\n * @example checkStyles(\"dialog\") will check for styles for @reach/dialog\r\n */\r\n\r\nfunction checkStyles(packageName) {\r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    // In CJS files, process.env.NODE_ENV is stripped from our build, but we\r\n    // need it to prevent style checks from clogging up user logs while testing.\r\n    // This is a workaround until we can tweak the build a bit to accommodate.\r\n    var _ref = typeof process !== \"undefined\" ? process.env : {\r\n      NODE_ENV: \"development\"\r\n    },\r\n        environment = _ref.NODE_ENV; // only check once per package\r\n\r\n\r\n    if (checkedPkgs[packageName]) return;\r\n    checkedPkgs[packageName] = true;\r\n\r\n    if (environment === \"development\" && parseInt(window.getComputedStyle(document.body).getPropertyValue(\"--reach-\" + packageName), 10) !== 1) {\r\n      console.warn(\"@reach/\" + packageName + \" styles not found. If you are using a bundler like webpack or parcel include this in the entry file of your app before any of your own styles:\\n  \\n      import \\\"@reach/\" + packageName + \"/styles.css\\\";\\n  \\n    Otherwise you'll need to include them some other way:\\n  \\n      <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"node_modules/@reach/\" + packageName + \"/styles.css\\\" />\\n  \\n    For more information visit https://ui.reach.tech/styling.\\n    \");\r\n    }\r\n  }\r\n}\r\n/**\r\n * When in dev mode, checks that styles for a given `@reach` package are loaded.\r\n *\r\n * @param packageName Name of the package to check.\r\n * @example useCheckStyles(\"dialog\") will check for styles for @reach/dialog\r\n */\r\n\r\nfunction useCheckStyles(packageName) {\r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    var name = useRef(packageName);\r\n    useEffect(function () {\r\n      return void (name.current = packageName);\r\n    }, [packageName]);\r\n    useEffect(function () {\r\n      return checkStyles(name.current);\r\n    }, []);\r\n  }\r\n}\r\n/**\r\n * Logs a warning in dev mode when a component switches from controlled to\r\n * uncontrolled, or vice versa\r\n *\r\n * A single prop should typically be used to determine whether or not a\r\n * component is controlled or not.\r\n *\r\n * @param controlledValue\r\n * @param controlledPropName\r\n * @param componentName\r\n */\r\n\r\nfunction useControlledSwitchWarning(controlledValue, controlledPropName, componentName) {\r\n  if (process.env.NODE_ENV !== \"production\") {\r\n    var controlledRef = useRef(controlledValue != null);\r\n    var nameCache = useRef({\r\n      componentName: componentName,\r\n      controlledPropName: controlledPropName\r\n    });\r\n    useEffect(function () {\r\n      nameCache.current = {\r\n        componentName: componentName,\r\n        controlledPropName: controlledPropName\r\n      };\r\n    }, [componentName, controlledPropName]);\r\n    useEffect(function () {\r\n      var wasControlled = controlledRef.current;\r\n      var _nameCache$current = nameCache.current,\r\n          componentName = _nameCache$current.componentName,\r\n          controlledPropName = _nameCache$current.controlledPropName;\r\n      var isControlled = controlledValue != null;\r\n\r\n      if (wasControlled !== isControlled) {\r\n        console.error(\"A component is changing an \" + (wasControlled ? \"\" : \"un\") + \"controlled `\" + controlledPropName + \"` state of \" + componentName + \" to be \" + (wasControlled ? \"un\" : \"\") + \"controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled \" + componentName + \" element for the lifetime of the component.\\n      More info: https://fb.me/react-controlled-components\");\r\n      }\r\n    }, [controlledValue]);\r\n  }\r\n}\r\n\r\nexport { checkStyles, useCheckStyles, useControlledSwitchWarning, useStateLogger };\r\n"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;AAEA;;AACA,IAAIC,WAAW,GAAG,EAAlB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+BC,KAA/B,EAAsC;EACpC,IAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;IACpBA,KAAK,GAAG,KAAR;EACD;;EAED,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;IACzC,IAAIC,QAAQ,GAAGT,MAAM,CAACK,KAAD,CAArB;IACAJ,SAAS,CAAC,YAAY;MACpBQ,QAAQ,CAACC,OAAT,GAAmBL,KAAnB;IACD,CAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;IAGAJ,SAAS,CAAC,YAAY;MACpB,IAAIQ,QAAQ,CAACC,OAAb,EAAsB;QACpBC,OAAO,CAACC,KAAR,CAAc,eAAd;QACAD,OAAO,CAACE,GAAR,CAAY,OAAOT,KAAnB,EAA0B,2DAA1B;QACAO,OAAO,CAACG,QAAR;MACD;IACF,CANQ,EAMN,CAACV,KAAD,CANM,CAAT;EAOD;AACF;AACD;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASW,WAAT,CAAqBC,WAArB,EAAkC;EAChC,IAAIV,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;IACzC;IACA;IACA;IACA,IAAIS,IAAI,GAAG,OAAOX,OAAP,KAAmB,WAAnB,GAAiCA,OAAO,CAACC,GAAzC,GAA+C;MACxDC,QAAQ,EAAE;IAD8C,CAA1D;IAAA,IAGIU,WAAW,GAAGD,IAAI,CAACT,QAHvB,CAJyC,CAOR;;;IAGjC,IAAIN,WAAW,CAACc,WAAD,CAAf,EAA8B;IAC9Bd,WAAW,CAACc,WAAD,CAAX,GAA2B,IAA3B;;IAEA,IAAIE,WAAW,KAAK,aAAhB,IAAiCC,QAAQ,CAACC,MAAM,CAACC,gBAAP,CAAwBC,QAAQ,CAACC,IAAjC,EAAuCC,gBAAvC,CAAwD,aAAaR,WAArE,CAAD,EAAoF,EAApF,CAAR,KAAoG,CAAzI,EAA4I;MAC1IL,OAAO,CAACc,IAAR,CAAa,YAAYT,WAAZ,GAA0B,4KAA1B,GAAyMA,WAAzM,GAAuN,iKAAvN,GAA2XA,WAA3X,GAAyY,2FAAtZ;IACD;EACF;AACF;AACD;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASU,cAAT,CAAwBV,WAAxB,EAAqC;EACnC,IAAIV,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;IACzC,IAAImB,IAAI,GAAG3B,MAAM,CAACgB,WAAD,CAAjB;IACAf,SAAS,CAAC,YAAY;MACpB,OAAO,MAAM0B,IAAI,CAACjB,OAAL,GAAeM,WAArB,CAAP;IACD,CAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;IAGAf,SAAS,CAAC,YAAY;MACpB,OAAOc,WAAW,CAACY,IAAI,CAACjB,OAAN,CAAlB;IACD,CAFQ,EAEN,EAFM,CAAT;EAGD;AACF;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASkB,0BAAT,CAAoCC,eAApC,EAAqDC,kBAArD,EAAyEC,aAAzE,EAAwF;EACtF,IAAIzB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;IACzC,IAAIwB,aAAa,GAAGhC,MAAM,CAAC6B,eAAe,IAAI,IAApB,CAA1B;IACA,IAAII,SAAS,GAAGjC,MAAM,CAAC;MACrB+B,aAAa,EAAEA,aADM;MAErBD,kBAAkB,EAAEA;IAFC,CAAD,CAAtB;IAIA7B,SAAS,CAAC,YAAY;MACpBgC,SAAS,CAACvB,OAAV,GAAoB;QAClBqB,aAAa,EAAEA,aADG;QAElBD,kBAAkB,EAAEA;MAFF,CAApB;IAID,CALQ,EAKN,CAACC,aAAD,EAAgBD,kBAAhB,CALM,CAAT;IAMA7B,SAAS,CAAC,YAAY;MACpB,IAAIiC,aAAa,GAAGF,aAAa,CAACtB,OAAlC;MACA,IAAIyB,kBAAkB,GAAGF,SAAS,CAACvB,OAAnC;MAAA,IACIqB,aAAa,GAAGI,kBAAkB,CAACJ,aADvC;MAAA,IAEID,kBAAkB,GAAGK,kBAAkB,CAACL,kBAF5C;MAGA,IAAIM,YAAY,GAAGP,eAAe,IAAI,IAAtC;;MAEA,IAAIK,aAAa,KAAKE,YAAtB,EAAoC;QAClCzB,OAAO,CAAC0B,KAAR,CAAc,iCAAiCH,aAAa,GAAG,EAAH,GAAQ,IAAtD,IAA8D,cAA9D,GAA+EJ,kBAA/E,GAAoG,aAApG,GAAoHC,aAApH,GAAoI,SAApI,IAAiJG,aAAa,GAAG,IAAH,GAAU,EAAxK,IAA8K,wKAA9K,GAAyVH,aAAzV,GAAyW,yGAAvX;MACD;IACF,CAVQ,EAUN,CAACF,eAAD,CAVM,CAAT;EAWD;AACF;;AAED,SAASd,WAAT,EAAsBW,cAAtB,EAAsCE,0BAAtC,EAAkEzB,cAAlE"},"metadata":{},"sourceType":"module"}